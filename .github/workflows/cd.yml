name: CD Pipeline

on:
  push:
    tags:
      - "*"

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Find the latest successful CI
        uses: actions/github-script@v6
        id: get_ci_run
        with:
          script: |
            const runs = await github.rest.actions.listWorkflowRuns({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: 'ci.yml', // or numeric workflow ID
              status: 'success',
              branch: 'main',
              per_page: 1
            });
            if (runs.data.workflow_runs.length === 0) {
              throw new Error('No successful CI runs found');
            }
            return runs.data.workflow_runs[0].id;

      - name: Download artifact
        run: |
          RUN_ID=${{ steps.get_ci_run.outputs.result }}
          ARTIFACTS_JSON=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            https://api.github.com/repos/${{ github.repository }}/actions/runs/$RUN_ID/artifacts)

          ARTIFACT_URL=$(echo "$ARTIFACTS_JSON" | jq -r '.artifacts[] | select(.name=="visual-cobol-codeflow") | .archive_download_url')

          curl -L -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" -o artifact.zip "$ARTIFACT_URL"
          unzip artifact.zip

      - name: Publish to VS Code Marketplace
        run: |
          TAG_NAME=${{ github.ref_name }}
          echo "Tag is $TAG_NAME"
          mv out/visual-cobol-codeflow.vsix out/visual-cobol-codeflow-$TAG_NAME.vsix
          vsce publish --pat ${{ secrets.VSCE_TOKEN }} --packagePath out/visual-cobol-codeflow-$TAG_NAME.vsix

      - name: Create GitHub Release and upload .vsix
        uses: softprops/action-gh-release@v2
        with:
          files: "*.vsix"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
